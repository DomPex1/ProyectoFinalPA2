@page "/CCategoriaArticulos"
@page  "/CCategoriaArticulos/{I:int}"

@inject IToastService toastService


<BlazoredToasts Position="ToastPosition.BottomRight"
                Timeout="5"
                SuccessClass="success-toast-override"
                SuccessIconClass="fa fa-thumbs-up"
                ErrorIconClass="fa fa-bug" />

<style>
    a {
        text-decoration: none;
        display: inline-block;
        padding: 8px 16px;
    }

        a:hover {
            background-color: #ddd;
            color: black;
        }

    .previous {
        background-color: #808080;
        color: black;
    }

    .next {
        background-color: #4CAF50;
        color: white;
    }

    .round {
        border-radius: 50%;
    }
</style>

<div class="card bg-info text-light">


    <div class="card-body ">
        <h3>Consulta Categoria de articulos</h3>
        <div class="form-inline">

            <label for="filtro">Filtro</label>
            <div class="form-group mx-sm-3 mb-2">
                <select class="form-control" @bind="Filtro">
                    <option value="" disabled selected>Seleccione un Criterio</option>
                    <option value="Todo">Todo</option>
                    <option value="Id">Id</option>
                    <option value="Descipcion">Descipcion</option>

                </select>
            </div>
            <label for="criterio"> Criterio</label>
            <div class="form-group mx-sm-3 mb-2">

                <input type="search" class="form-control" @bind-value="Criterio" />
            </div>

            <button type="button" class="btn btn-success mx-sm-3 mb-2" @onclick="Buscar">Buscar</button>

        </div>
        <br />

        <table class="table">
            <thead class="thead-light">
                <tr>
                    <th>Id</th>
                    <th>Descripcion</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @if (listaPaginado.Count == 0)
                {
                    <tr>
                        <th colspan="12" style="color:white; text-align: center">"No hay datos que mostrar"</th>
                    </tr>
                }
                else
                {
                    @foreach (var item in listaPaginado)
                    {
                        <tr>
                            <th>@item.CategoriaId</th>
                            <th>@item.Descripcion</th>
                            <td><a class="btn btn-primary" href="RCategoriaArticulos/@item.CategoriaId">Ver</a></td>

                        </tr>
                    }
                }
            </tbody>
        </table>


        <a class="previous" @onclick="Anterior">&laquo; Previous</a>
        <a class="next" @onclick="Siguiente">Next &raquo;</a>

        <BlazoredToasts />
    </div>


</div>


@code {
    [Parameter]
    public int I { get; set; }

    public List<CategoriaArticulos> lista { get; set; }
    public List<CategoriaArticulos> listaPaginado { get; set; }
    public ControllersCategoriaArticulos controllers = new ControllersCategoriaArticulos();


    Paginacion paginacion = new Paginacion();


    Contexto Contexto = new Contexto();
    
    private string Filtro { get; set; }
    private string Criterio { get; set; }
    private string mensaje;


    double paginas = 0;
    double cantidad = 0;
    int paginaActual = 0;



    protected override async Task OnInitializedAsync()
    {

        lista = controllers.GetList(p => true);
        listaPaginado = new List<CategoriaArticulos>();


    }

    private void Paginar()
    {

        paginaActual = 1;
        cantidad = lista.Count();
        paginas = Math.Ceiling(cantidad / paginacion.Mostrar);
        listaPaginado = lista.Take(paginacion.Mostrar).ToList();
    }

    private void Buscar()
    {

        try
        {
            Paginar();

            if (Filtro == null)
            {
                Filtro = "Todo";

            }

            lista = controllers.GetList(a => true);

            if (lista.Count == 0)
            {
                toastService.ShowWarning("No hay categoria de articulo registrados.", "Precaución");
            }
            else
            {
                mensaje = "";
                switch (Filtro)
                {
                    case "Todo":
                        lista = controllers.GetList(e => true);
                        break;
                    case "Id":
                        lista = controllers.GetList(e => e.CategoriaId == Convert.ToInt32(Criterio));
                        break;
                    case "Descipcion":
                        lista = controllers.GetList(e => e.Descripcion == Criterio);
                        break;

                }
                Paginar();

            }

        }
        catch (Exception)
        {
            throw;
        }
    }

    private void Siguiente()
    {
        if (paginaActual < paginas)
        {
            paginaActual++;
            listaPaginado = lista
                .Skip((paginaActual - 1) * paginacion.Mostrar)
                .Take(paginacion.Mostrar)
                .ToList();

        }
    }

    private void Anterior()
    {
        if (paginaActual > 1)
        {
            paginaActual--;
            listaPaginado = lista
                .Skip((paginaActual - 1) * paginacion.Mostrar)
                .Take(paginacion.Mostrar)
                .ToList();
        }
    }

}
