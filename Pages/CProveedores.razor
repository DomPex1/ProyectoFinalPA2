@page "/CProveedores"
@page  "/CProveedores/{I:int}"


<div class="card bg-info text-light">
    <div class="card-body ">
        <h3>Consulta proveedores</h3>

        <div class="form-inline">

            <label for="filtro">Filtro</label>
            <div class="form-group mx-sm-3 mb-2">
                <select class="form-control" @bind="Filtro">
                    <option value="" disabled selected>Seleccione un Criterio</option>
                    <option value="Todo">Todo</option>
                    <option value="Id">Id</option>
                    <option value="Nombres">Nombres</option>
                    <option value="Usuario">Usuario</option>
                    <option value="Email">Email</option>
                </select>
            </div>
            <label for="criterio"> Criterio</label>
            <div class="form-group mx-sm-3 mb-2">

                <input type="search" class="form-control" @bind-value="Criterio" />
            </div>

            <button type="button" class="btn btn-success mx-sm-3 mb-2" @onclick="Buscar">Buscar</button>

        </div>
        <br />

        <table class="table">
            <thead class="thead-light">
                <tr>
                    <th>ProveedoresId</th>
                    <th>Nombres</th>
                    <th>Telefono</th>
                    <th>Direccion</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>

                @foreach (var item in lista)
                {
                    <tr>
                        <th>@item.ProveedorId</th>
                        <th>@item.Nombres</th>
                        <th>@item.Telefono</th>
                        <th>@item.Direccion</th>
                        <td><a class="btn btn-primary" href="RProveedores/@item.ProveedorId">Ver</a></td>

                    </tr>
                }

            </tbody>
        </table>
        <nav aria-label="...">
            <ul class="pagination pagination-lg">
                @for (int i = 1; i <= totaldepaginas; i++)
                {
                    <li class="page-item"><a class="page-link" @onclick="OnInitialized" href="CUsuario/@i">@i</a></li>
                }

            </ul>
        </nav>

        <h5>@mensaje</h5>

    </div>
</div>

@code {

    public List<Proveedores> lista { get; set; }
    public ControllersProveedores controllers = new ControllersProveedores();
    [Parameter]
    public int I { get; set; }
    private int Contador { get; set; }
    private int contCiclo { get; set; }

    Paginacion paginacion = new Paginacion();
    public double totaldepaginas { get; set; }

    private string Filtro { get; set; }
    private string Criterio { get; set; }
    Contexto Contexto = new Contexto();
    double conteo = 0;

    private string mensaje;

    protected override async Task OnInitializedAsync()
    {
        lista = new List<Proveedores>();
    }

    private void Buscar()
    {

        try
        {
            Cargar();

            if (Filtro == null)
            {
                Filtro = "Todo";

            }

            lista = controllers.GetList(a => true);

            if (lista.Count == 0)
            {
                mensaje = "No hay clientes registrado";
            }
            else
            {
                mensaje = "";
                switch (Filtro)
                {
                    case "Todo":
                        lista = controllers.GetList(e => true);
                        break;
                    case "Id":
                        lista = controllers.GetList(e => e.ProveedorId == Convert.ToInt32(Criterio));
                        break;
                    case "Nombres":
                        lista = controllers.GetList(e => e.Nombres == Criterio);
                        break;
                    case "Usuario":
                        lista = controllers.GetList(e => Convert.ToString(e.Telefono) == Criterio);
                        break;
                    case "Email":
                        lista = controllers.GetList(e => e.Direccion == Criterio);
                        break;
                }

            }

        }
        catch (Exception)
        {
            throw;
        }
    }
    private void Cargar()
    {
        lista = controllers.GetList(P => true);
        conteo = Contexto.Proveedores.Count();
        totaldepaginas = Math.Ceiling(conteo / paginacion.CantidadMostrar);
        this.lista = Contexto.Proveedores.Take(paginacion.CantidadMostrar).ToList();
    }
}

