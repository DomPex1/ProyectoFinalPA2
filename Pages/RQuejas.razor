@page "/RQuejas"
@page "/RQuejas/{QuejasId:int}"

<div class="card bg-dark text-light">
    <div class="card-body ">
        <h1>Registro Quejas</h1>

        <EditForm Model="@quejas" OnValidSubmit="Guardar">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <label for="QuejasId">Id</label>
            <div class="form-inline">
                <InputNumber @bind-Value="quejas.QuejasId" class="form-control " />
                <button type="button" class="btn btn-success mx-sm-3" @onclick="Buscar">Buscar</button>
            </div>
            <br />
            <div class="form-group">
                <label for="Cliente">Cliente</label>

                <InputSelect @bind-Value="@ClienteSeleccionado" class="form-control col-md-2" @onchange="CargarCliente" @onclick="CargarCliente">
                    <option value="" disabled selected>Seleccione un Cliente</option>
                    @foreach (var item in listaClientes)
                    {
                        <option value="@item.ClienteId">@item.Nombre</option>
                    }
                </InputSelect>

            </div>
            <div class="form-group">
                <label for="Fecha">Fecha</label>
                <InputDate class="form-control col-md-2" @bind-Value="quejas.Fecha" />
            </div>
            <div class="form-group">
                <label for="Descripcion">Descripcion</label>
                <InputText class="form-control col-md-2" @bind-Value="quejas.Descripcion" />
            </div>
            <div class="form-inline">
                <div class="form-group">
                    <label for="Problema">Problema</label>
                    <InputText class="form-control mx-sm-3" @bind-Value="Problemas" />
                </div>
                <div class="form-group">
                    <label for="Solucion">Solucion</label>
                    <InputText class="form-control mx-sm-3" @bind-Value="Soluciones" />
                </div>
                <button type="button" class="btn btn-primary" @onclick="Agregar">Agregar</button>
            </div>
            <br />

            <div>
                <table class="table text-light">
                    <thead class="thead-light">
                        <tr>
                            <th>Id</th>
                            <th>Problema</th>
                            <th>Solucion</th>
                        </tr>
                    </thead>
                    <tbody>

                        @foreach (var item in quejas.Detalles)
                        {
                            <tr>
                                <th>@item.QuejasDetalleId</th>
                                <th>@item.Problema</th>
                                <th>@item.Solucion</th>

                                <th><button type="button" class="btn btn-danger" @onclick="(()=> EliminarGrid(item))">Eliminar</button></th>

                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <br />

            <div class="form-group">
                <button type="submit" class="col-md-2 btn btn-primary">Guardar</button>
                <button type="button" class="col-md-2 btn btn-info" @onclick="Limpiar">Limpiar</button>
                <button type="button" class="col-md-2 btn btn-danger" @onclick="Eliminar">Eliminar</button>
            </div>

            <h3>@Mensaje</h3>
        </EditForm>
    </div>
</div>

@code {

    [Parameter]
    public int QuejasId { get; set; }

    protected override void OnInitialized()
    {

        listaClientes = controllersCliente.GetList(e => true);

        if (QuejasId > 0)
        {
            quejas.QuejasId = QuejasId;
            Buscar();
        }
    }

    ControllersQuejas controllers = new ControllersQuejas();

    ControllersCliente controllersCliente = new ControllersCliente();


    private List<Clientes> listaClientes = new List<Clientes>();


    private string ClienteSeleccionado { get; set; }


    private Clientes Clientes;

    Quejas quejas = new Quejas();

    public string Problemas;
    public string Soluciones;
    public string Mensaje;
    Contexto db = new Contexto();



    private void Guardar()
    {
        quejas.ClienteId = Convert.ToInt32(ClienteSeleccionado);

        if (quejas.QuejasId == 0)
        {
            controllers.Guardar(quejas);
            Mensaje = "Guardo";
            Limpiar();
        }
        else
        {
            if (controllers.Buscar(quejas.QuejasId) != null)
            {
                controllers.Modificar(quejas);
                Mensaje = "Modifico";
                Limpiar();
            }

        }
    }

    public void CargarCliente()
    {
        try
        {
            Clientes = controllersCliente.Buscar(Convert.ToInt32(ClienteSeleccionado));

        }
        catch (Exception)
        {

            throw;
        }
    }

    private void Limpiar()
    {
        quejas = new Quejas();

    }
    private void Eliminar()
    {
        if (quejas.QuejasId != 0)
        {
            if (controllers.Buscar(quejas.QuejasId) != null)
            {

                controllers.Eliminar(quejas.QuejasId);
                Mensaje = "Eliminado";
                Limpiar();

            }
            else
            {
                Mensaje = "Id no existe";
            }

        }
        else
        {
            Mensaje = "Selecione un ID";
        }

    }
    private void Buscar()
    {
        if (quejas.QuejasId != 0)
        {
            if (controllers.Buscar(quejas.QuejasId) != null)
            {

                quejas = controllers.Buscar(quejas.QuejasId);


            }
            else
            {
                Mensaje = "Id no existe";
            }

        }
        else
        {
            Mensaje = "Selecione un ID";
        }


    }
    private void Agregar()
    {
        if(Problemas == null)
        {
            Mensaje = "Debe agregar un problema";
        }else
        {
            if(Soluciones == null)
            {
                Mensaje = "Debe agregar una solucion";
            }
            else
            {
                quejas.Detalles.Add(new QuejasDetalle()
                {
                    Problema = Problemas,
                    Solucion = Soluciones

                });
                
            }
        }


    }

    private void EliminarGrid(QuejasDetalle detalle)
    {
        quejas.Detalles.Remove(detalle);



    }
}
